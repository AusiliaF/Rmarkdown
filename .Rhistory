load(quakes)
quakes
load('quakes')
quakes
data <- quakes
str(data)
View(data)
remove.packages("htmltools")
install.packages("htmltools")
? quakes
install.packages("bookdown")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics(path = "img/magnitudo.jpg")
knitr::opts_chunk$set(echo = TRUE)
data(qaukes)
dati = quakes
(head(dati))
(head(dati))
load("C:/Users/UTENTE/Desktop/Rmarkdown/Rmarkdown.Rproj")
save.image("C:/Users/UTENTE/Desktop/Rmarkdown/quakes.RData")
knitr::opts_chunk$set(echo = TRUE)
data(qaukes)
dati = quakes
(hint:load(dati))
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
(hint:load(dati))
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(dati))
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(dati)
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(quakes)
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(quakes.RData)
load("C:/Users/UTENTE/Desktop/Rmarkdown/quakes.RData")
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(dati)
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(quakes)
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(quakes)
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
(head(dati))
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(dati)
(head(dati))
(head(dati))
(head(dati))
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load(dati)
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load('dati')
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
knitr::opts_chunk$set(echo = TRUE)
load(quakes)
knitr::opts_chunk$set(echo = TRUE)
load(quakes)
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
knitr::opts_chunk$set(echo = TRUE)
load(dati)
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load('quakes.RData')
knitr::opts_chunk$set(echo = TRUE)
data(quakes)
dati = quakes
load('quakes.RData')
knitr::opts_chunk$set(echo = TRUE)
#data(quakes)
#dati = quakes
load('quakes.RData')
knitr::opts_chunk$set(echo = TRUE)
#data(quakes)
#dati = quakes
load('quakes.RData')
knitr::opts_chunk$set(echo = FALSE)
#data(quakes)
#dati = quakes
load('quakes.RData')
knitr::opts_chunk$set(echo = TRUE)
#data(quakes)
#dati = quakes
load('quakes.RData')
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
(head(dati))
summary(dati)
summary(dati)
(head(dati))
(head(dati))
data$y = quakes$mag
data$y = quakes$mag
dati$y = quakes$mag
dati$x = quakes$depth
summary(dati$x)
summary(m)
dati$y = quakes$mag
dati$x = quakes$depth
summary(dati$x)
summary(dati)
dati$y = quakes$mag
dati$x = quakes$depth
summary(dati$x)
summary(dati)
dati$y = quakes$mag
dati$x = quakes$depth
summary(dati$x)
summary(dati)
dati$y = quakes$mag
dati$x = quakes$depth
summary(dati$x)
summary(dati)
dati$y = quakes$mag
dati$x = quakes$depth
summary(dati$x)
summary(dati$y)
plot(data$y ~ data$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(n <- options$out.lines)) {
x <- xfun::split_lines(x)
if (length(x) > n) {
# truncate the output
x <- c(head(x, n), "....\n")
}
x <- paste(x, collapse = "\n")
}
hook_output(x, options)
})
knitr::opts_chunk$set(echo = TRUE)
#data(quakes)
#dati = quakes
load('quakes.RData')
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(n <- options$out.lines)) {
x <- xfun::split_lines(x)
if (length(x) > n) {
# truncate the output
x <- c(head(x, n), "....\n")
}
x <- paste(x, collapse = "\n")
}
hook_output(x, options)
})
View(hook_output)
(head(dati))
(head(dati))
(head(dati))
(head(dati))
summary(dati)
summary(dati)
summary(dati)
dati
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x, col"red")
plot((dati$y ~ dati$x), col='red')
plot((dati$y ~ dati$x), col='red')
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
knitr::opts_chunk$set(echo = TRUE)
#data(quakes)
#dati = quakes
load('quakes.RData')
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(n <- options$out.lines)) {
x <- xfun::split_lines(x)
if (length(x) > n) {
# truncate the output
x <- c(head(x, n), "....\n")
}
x <- paste(x, collapse = "\n")
}
hook_output(x, options)
})
(head(dati))
summary(dati)
dati$y = quakes$mag
dati$x = quakes$depth
summary(dati$x)
summary(dati$y)
plot(dati$y ~ dati$x)
install.packages("stargazer")
knitr::opts_chunk$set(echo = TRUE)
#data(quakes)
#dati = quakes
load('quakes.RData')
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(n <- options$out.lines)) {
x <- xfun::split_lines(x)
if (length(x) > n) {
# truncate the output
x <- c(head(x, n), "....\n")
}
x <- paste(x, collapse = "\n")
}
hook_output(x, options)
})
library(stargazer)
stargazer(quakes, type="latex", summary = TRUE,
title= "Tabella di summary", digits = 3, header=FALSE)
m = lm(y ~ x, data = data)
m = lm(y ~ x, data = data)
m = lm(y ~ x, data = dati)
dati
library(stargazer)
stargazer(quakes, type="latex", summary = TRUE,
title= "Tabella di summary", digits = 3, header=FALSE)
library(stargazer)
stargazer(m, type="latex", summary = TRUE,
title= "Tabella di summary", digits = 3, header=FALSE)
library(stargazer)
stargazer(quakes, type="latex", summary = TRUE,
title= "Tabella di summary", digits = 3, header=FALSE)
library(stargazer)
stargazer(m = lm(y ~ x, data = dati), type="latex", summary = TRUE,
title= "Tabella di summary", digits = 3, header=FALSE)
library(stargazer)
stargazer(m = lm(y ~ x, data = dati), type="latex", summary = TRUE,
title= "Tabella di summary", digits = 3, header=FALSE)
library(stargazer)
stargazer((m = lm(y ~ x, data = dati)), type="latex", summary = TRUE,
title= "Tabella di summary del modello di regressione", digits = 3, header=FALSE)
m = lm(y ~ x, data = dati)
m = lm(y ~ x, data = dati)
m = lm(y ~ x, data = data)
library(stargazer)
stargazer(quakes, type="latex", summary = TRUE,
title= "Tabella di summary del dataset", digits = 3, header=FALSE)
m = lm(y ~ x, data = data)
m = lm(y ~ x, data = data)
library(stargazer)
stargazer(quakes, type="latex", summary = TRUE,
title= "Tabella di summary del dataset", digits = 3, header=FALSE)
m = lm(y ~ x, data = dati)
m = lm(y ~ x, data = dati)
knitr::opts_chunk$set(echo = TRUE)
#data(quakes)
#dati = quakes
load('quakes.RData')
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(n <- options$out.lines)) {
x <- xfun::split_lines(x)
if (length(x) > n) {
# truncate the output
x <- c(head(x, n), "....\n")
}
x <- paste(x, collapse = "\n")
}
hook_output(x, options)
})
(head(dati))
summary(dati)
dati$y = quakes$mag
dati$x = quakes$depth
summary(dati$x)
summary(dati$y)
plot(dati$y ~ dati$x)
dati
library(stargazer)
stargazer(quakes, type="latex", summary = TRUE,
title= "Tabella di summary del dataset", digits = 3, header=FALSE)
m = lm(y ~ x, data = dati)
stargazer(m1, type = "latex", summary = TRUE, title = "Risultati del modello", digits = 3,
+     header = FALSE)
m = lm(y ~ x, data = dati)
stargazer(m, type = "latex", summary = TRUE, title = "Risultati del modello", digits = 3,
+     header = FALSE)
m = lm(y ~ x, data = dati)
stargazer(m, type = "latex", summary = TRUE, title = "Risultati del modello", digits = 3,
header = FALSE)
library(stargazer)
stargazer(quakes, type="latex", summary = TRUE,
title= "Tabella di summary del dataset", digits = 3, header=FALSE)
m = lm(y ~ x, data = dati)
m = lm(y ~ x, data = dati)
stargazer(m, type = "latex", summary = TRUE, title = "Risultati del modello", digits = 3,
header = FALSE)
> m0 = m(x ~ 1, data = dati)
m0 = m(x ~ 1, data = dati)
m0 = lm(x ~ 1, data = dati)
m1 = lm(x ~ y, data = dati)
> stargazer(m0, m1, type = "latex", title = "Model comparison", digits = 3, intercept.top = TRUE,
m0 = lm(x ~ 1, data = dati)
m1 = lm(x ~ y, data = dati)
stargazer(m0, m1, type = "latex", title = "Model comparison", digits = 3, intercept.top = TRUE,
intercept.bottom = FALSE, header = FALSE)
m = lm(y ~ x, data = dati)
{`r round(sum(quakes$mag),2)`}{`r nrow(quakes)`}
$\frac{`r round(sum(quakes$mag),2)`}{`r nrow(quakes)`}= `r round(round(sum(uakes$mag),2)/nrow(quakes
dati$y = quakes$mag
mean(dati$y)
dati$y[1]
dati$y = quakes$mag
mean(dati$y)
dati$y[1]
(dati$y[1]-mean(dati$y))/sd(dati$y)
(dati$y[1]-mean(dati$y))/sd(dati$y) #deviazione standard
$\frac{`r(dati$y[1]-mean(dati$y))`}{`r sd(dati$y)}= `r(dati$y[1]-mean(dati$y))`}{`r sd(dati$y)}$
$$\frac{`r(dati$y[1]-mean(dati$y))`}{`r sd(dati$y)}= `r(dati$y[1]-mean(dati$y))`}{`r sd(dati$y)}$$
$\frac{`r(dati$y[1]-mean(dati$y))`}{`r sd(dati$y)}= {`r(dati$y[1]-mean(dati$y))`}{`r sd(dati$y)}$
(dati$y[1]-mean(dati$y))/sd(dati$y) #deviazione standard
dati$y = quakes$mag
mean(dati$y) #media
dati$y[1]
knitr::opts_chunk$set(echo = TRUE)
grafico = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico = ggplot(quakes,
aes(y=y,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
install.packages("ggplot2")
grafico = ggplot(quakes,
aes(y=y,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico = ggplot(dati,
aes(y=y,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico = ggplot(dati,
aes(y=mag,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico = ggplot2(dati,
aes(y=mag,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
grafico = ggplot2(dati,
aes(y=mag,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico = ggplot2(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico = ggplot(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico = ggplot2(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
dati
grafico = ggplot2(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico = ggplot(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
dati
grafico = ggplot(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
dati
grafico = ggplot2(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
dati
grafico = ggplot(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
dati
library(ggplot2)
grafico = ggplot(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico
dati
library(ggplot2)
grafico = ggplot(dati,
aes(y=mag,x=depth, color =, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico
dati
library(ggplot2)
grafico = ggplot(dati,
aes(y=mag,x=depth, color =, size = )) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico
dati
library(ggplot2)
grafico = ggplot2(dati,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
library(ggplot2)
grafico = ggplot2(quakes,
aes(y=mag,x=depth, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
